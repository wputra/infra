---
 - hosts: loadbalancer
   become: true
   tasks:
    - name: Check nginx status
      command: service nginx status

    - name: Ensure nginx listen on port 80
      wait_for: port=80 timeout=1

 - hosts: webserver
   become: true
   tasks:
    - name: Check apache2 status
      command: service apache2 status

    - name: Ensure apache2 listen on port 80
      wait_for: port=80 timeout=1

 - hosts: database
   become: true
   tasks:
    - name: Check mysql status
      command: service mysql status

    - name: Ensure mysql listen on port 3306
      wait_for: port=3306 timeout=1

 - hosts: control
   tasks:
    - name: Verify end-to-end status
      uri: url=http://{{ item }} return_content=yes
      with_items: "{{ groups['loadbalancer'] }}"
      register: lb_index

    - fail: msg="Index fail to return content"
      when: "'Hello, from sunny' not in item.content"
      with_items: "{{ lb_index.results }}"

    - name: Verify database status
      uri: url=http://{{ item }}/db return_content=yes
      with_items: "{{ groups['loadbalancer'] }}"
      register: lb_db

    - fail: msg="Database fail to return content"
      when: "'Database Connected' not in item.content"
      with_items: "{{ lb_db.results }}"

 - hosts: loadbalancer
   tasks:
    - name: Verify backend status
      uri: url=http://{{ item }} return_content=yes
      with_items: "{{ groups['webserver'] }}"
      register: app_index

    - fail: msg="Index fail to return content"
      when: "'Hello, from sunny' not in item.content"
      with_items: "{{ app_index.results }}"

    - name: Verify database status from backend
      uri: url=http://{{ item }}/db return_content=yes
      with_items: "{{ groups['webserver'] }}"
      register: app_db

    - fail: msg="Database fail to return content"
      when: "'Database Connected' not in item.content"
      with_items: "{{ app_db.results }}"
